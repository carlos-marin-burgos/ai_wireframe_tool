{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.36.1.42791",
      "templateHash": "2408947317197173229"
    },
    "name": "Designetica AI Wireframe Generator",
    "description": "Complete Azure infrastructure for Designetica AI wireframe generation platform"
  },
  "parameters": {
    "environmentName": {
      "type": "string",
      "defaultValue": "designetica",
      "minLength": 1,
      "maxLength": 64,
      "metadata": {
        "description": "Name of the environment. Used for generating resource names."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "minLength": 1,
      "metadata": {
        "description": "Primary location for all resources"
      }
    },
    "openAiLocation": {
      "type": "string",
      "defaultValue": "eastus2",
      "metadata": {
        "description": "Location for OpenAI resources"
      }
    },
    "openAiSkuName": {
      "type": "string",
      "defaultValue": "S0",
      "metadata": {
        "description": "SKU name for the OpenAI service"
      }
    },
    "gitHubUserName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "GitHub username or organization for the repository"
      }
    },
    "repositoryName": {
      "type": "string",
      "defaultValue": "designetica",
      "metadata": {
        "description": "Name of the GitHub repository"
      }
    },
    "openAiModelDeployments": {
      "type": "array",
      "defaultValue": [
        {
          "name": "gpt-4o",
          "model": {
            "format": "OpenAI",
            "name": "gpt-4o",
            "version": "2024-08-06"
          },
          "sku": {
            "name": "Standard",
            "capacity": 10
          }
        }
      ],
      "metadata": {
        "description": "Model deployments for Azure OpenAI"
      }
    },
    "staticWebAppSkuName": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Free",
        "Standard"
      ],
      "metadata": {
        "description": "SKU used for the Static Web App service (Free or Standard)."
      }
    }
  },
  "variables": {
    "$fxv#0": {
      "applicationInsights": "appi",
      "appServicePlan": "plan",
      "cognitiveServices": "cog",
      "functionApp": "func",
      "keyVault": "kv",
      "logAnalyticsWorkspace": "log",
      "resourceGroup": "rg",
      "staticWebApp": "swa",
      "storageAccount": "st",
      "userAssignedIdentity": "id"
    },
    "uniqueSuffix": "[uniqueString(subscription().id, resourceGroup().id, parameters('location'), parameters('environmentName'))]",
    "abbreviations": "[variables('$fxv#0')]",
    "openAiAccountName": "[take(format('{0}-{1}-{2}', variables('abbreviations').cognitiveServices, parameters('environmentName'), variables('uniqueSuffix')), 64)]",
    "storageAccountName": "[take(format('{0}{1}{2}', variables('abbreviations').storageAccount, replace(parameters('environmentName'), '-', ''), variables('uniqueSuffix')), 24)]",
    "logAnalyticsName": "[take(format('{0}-{1}-{2}', variables('abbreviations').logAnalyticsWorkspace, parameters('environmentName'), variables('uniqueSuffix')), 63)]",
    "applicationInsightsName": "[format('{0}-{1}-{2}', variables('abbreviations').applicationInsights, parameters('environmentName'), variables('uniqueSuffix'))]",
    "userAssignedIdentityName": "[format('{0}-{1}-{2}', variables('abbreviations').userAssignedIdentity, parameters('environmentName'), variables('uniqueSuffix'))]",
    "keyVaultName": "[take(format('{0}-{1}-{2}', variables('abbreviations').keyVault, parameters('environmentName'), variables('uniqueSuffix')), 24)]",
    "functionAppName": "[format('{0}-{1}-{2}', variables('abbreviations').functionApp, parameters('environmentName'), variables('uniqueSuffix'))]",
    "appServicePlanName": "[format('{0}-{1}-{2}', variables('abbreviations').appServicePlan, parameters('environmentName'), variables('uniqueSuffix'))]",
    "staticWebAppName": "[take(format('{0}-{1}-{2}', variables('abbreviations').staticWebApp, parameters('environmentName'), variables('uniqueSuffix')), 60)]",
    "staticWebAppTagsBase": "[union(variables('tags'), createObject('azd-service-name', 'frontend'))]",
    "staticWebAppTagsWithOwner": "[if(empty(parameters('gitHubUserName')), variables('staticWebAppTagsBase'), union(variables('staticWebAppTagsBase'), createObject('repo-owner', parameters('gitHubUserName'))))]",
    "staticWebAppTags": "[if(empty(parameters('repositoryName')), variables('staticWebAppTagsWithOwner'), union(variables('staticWebAppTagsWithOwner'), createObject('repo-name', parameters('repositoryName'))))]",
    "tags": {
      "azd-env-name": "[parameters('environmentName')]",
      "environment": "[parameters('environmentName')]",
      "project": "designetica",
      "purpose": "ai-wireframe-generator"
    }
  },
  "resources": [
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2023-01-31",
      "name": "[variables('userAssignedIdentityName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]"
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2022-10-01",
      "name": "[variables('logAnalyticsName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 30,
        "features": {
          "searchVersion": 1,
          "legacy": 0,
          "enableLogAccessUsingOnlyResourcePermissions": true
        }
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('applicationInsightsName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))]",
        "IngestionMode": "LogAnalytics",
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2023-07-01",
      "name": "[variables('keyVaultName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[tenant().tenantId]",
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": true,
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 90,
        "enablePurgeProtection": true,
        "enableRbacAuthorization": true,
        "publicNetworkAccess": "Enabled",
        "accessPolicies": []
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "dnsEndpointType": "Standard",
        "defaultToOAuthAuthentication": false,
        "publicNetworkAccess": "Enabled",
        "allowCrossTenantReplication": false,
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": false,
        "allowSharedKeyAccess": true,
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "requireInfrastructureEncryption": false,
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2024-10-01",
      "name": "[variables('openAiAccountName')]",
      "location": "[parameters('openAiLocation')]",
      "tags": "[variables('tags')]",
      "sku": {
        "name": "[parameters('openAiSkuName')]"
      },
      "kind": "OpenAI",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityName')))]": {}
        }
      },
      "properties": {
        "customSubDomainName": "[variables('openAiAccountName')]",
        "networkAcls": {
          "defaultAction": "Allow",
          "virtualNetworkRules": [],
          "ipRules": []
        },
        "publicNetworkAccess": "Enabled",
        "disableLocalAuth": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityName'))]"
      ]
    },
    {
      "copy": {
        "name": "openAiModelDeployment",
        "count": "[length(parameters('openAiModelDeployments'))]"
      },
      "type": "Microsoft.CognitiveServices/accounts/deployments",
      "apiVersion": "2024-10-01",
      "name": "[format('{0}/{1}', variables('openAiAccountName'), parameters('openAiModelDeployments')[copyIndex()].name)]",
      "properties": {
        "model": "[parameters('openAiModelDeployments')[copyIndex()].model]",
        "raiPolicyName": "[tryGet(parameters('openAiModelDeployments')[copyIndex()], 'raiPolicyName')]"
      },
      "sku": "[parameters('openAiModelDeployments')[copyIndex()].sku]",
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('openAiAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2023-12-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      },
      "kind": "functionapp",
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2023-12-01",
      "name": "[variables('functionAppName')]",
      "location": "[parameters('location')]",
      "tags": "[union(variables('tags'), createObject('azd-service-name', 'backend'))]",
      "kind": "functionapp,linux",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityName')))]": {}
        }
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "reserved": true,
        "siteConfig": {
          "linuxFxVersion": "NODE|20",
          "appSettings": [
            {
              "name": "AzureWebJobsStorage__accountName",
              "value": "[variables('storageAccountName')]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "node"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "~20"
            },
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2020-02-02').ConnectionString]"
            },
            {
              "name": "AZURE_CLIENT_ID",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityName')), '2023-01-31').clientId]"
            },
            {
              "name": "AZURE_OPENAI_ENDPOINT",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', variables('openAiAccountName')), '2024-10-01').endpoint]"
            },
            {
              "name": "AZURE_OPENAI_API_VERSION",
              "value": "2024-08-01-preview"
            },
            {
              "name": "AZURE_OPENAI_DEPLOYMENT",
              "value": "gpt-4o"
            },
            {
              "name": "NODE_ENV",
              "value": "production"
            },
            {
              "name": "AI_BUILDER_ENVIRONMENT",
              "value": "production"
            },
            {
              "name": "POWER_PLATFORM_ENVIRONMENT",
              "value": "production"
            }
          ],
          "cors": {
            "allowedOrigins": [
              "https://make.powerapps.com",
              "https://make.powerautomate.com",
              "https://flow.microsoft.com",
              "https://powerapps.microsoft.com",
              "https://api.designetica.com"
            ],
            "supportCredentials": false
          }
        },
        "httpsOnly": true,
        "keyVaultReferenceIdentity": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('openAiAccountName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/staticSites",
      "apiVersion": "2022-09-01",
      "name": "[variables('staticWebAppName')]",
      "location": "[parameters('location')]",
      "kind": "StaticSite",
      "tags": "[variables('staticWebAppTags')]",
      "sku": {
        "name": "[parameters('staticWebAppSkuName')]",
        "tier": "[parameters('staticWebAppSkuName')]"
      },
      "properties": {
        "allowConfigFileUpdates": true,
        "stagingEnvironmentPolicy": "Enabled"
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', variables('storageAccountName'))]",
      "name": "[guid(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityName')), 'b7e6dc6d-f1e8-4753-8033-0f276bb0955b')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b7e6dc6d-f1e8-4753-8033-0f276bb0955b')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityName')), '2023-01-31').principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', variables('storageAccountName'))]",
      "name": "[guid(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityName')), '974c5e8b-45b9-4653-ba55-5f855dd0fb88')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '974c5e8b-45b9-4653-ba55-5f855dd0fb88')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityName')), '2023-01-31').principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', variables('storageAccountName'))]",
      "name": "[guid(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityName')), 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityName')), '2023-01-31').principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.CognitiveServices/accounts/{0}', variables('openAiAccountName'))]",
      "name": "[guid(resourceId('Microsoft.CognitiveServices/accounts', variables('openAiAccountName')), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityName')), 'a97b65f3-24c7-4388-baec-2e87135dc908')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'a97b65f3-24c7-4388-baec-2e87135dc908')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityName')), '2023-01-31').principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('openAiAccountName'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', variables('storageAccountName'))]",
      "name": "[guid(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityName')), '0a9a7e1f-b9d0-4cc4-a60d-0319b160aaa3')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '0a9a7e1f-b9d0-4cc4-a60d-0319b160aaa3')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityName')), '2023-01-31').principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Insights/components/{0}', variables('applicationInsightsName'))]",
      "name": "[guid(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityName')), '3913510d-42f4-4e42-8a64-420c390055eb')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '3913510d-42f4-4e42-8a64-420c390055eb')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityName')), '2023-01-31').principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.KeyVault/vaults/{0}', variables('keyVaultName'))]",
      "name": "[guid(resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName')), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityName')), '4633458b-17de-408a-b874-0445c86b69e6')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityName')), '2023-01-31').principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityName'))]"
      ]
    }
  ],
  "outputs": {
    "AZURE_LOCATION": {
      "type": "string",
      "value": "[parameters('location')]"
    },
    "AZURE_TENANT_ID": {
      "type": "string",
      "value": "[tenant().tenantId]"
    },
    "AZURE_RESOURCE_GROUP": {
      "type": "string",
      "value": "[resourceGroup().name]"
    },
    "RESOURCE_GROUP_ID": {
      "type": "string",
      "value": "[resourceGroup().id]"
    },
    "AZURE_OPENAI_ENDPOINT": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', variables('openAiAccountName')), '2024-10-01').endpoint]"
    },
    "AZURE_OPENAI_ACCOUNT_NAME": {
      "type": "string",
      "value": "[variables('openAiAccountName')]"
    },
    "AZURE_USER_ASSIGNED_IDENTITY_NAME": {
      "type": "string",
      "value": "[variables('userAssignedIdentityName')]"
    },
    "AZURE_USER_ASSIGNED_IDENTITY_CLIENT_ID": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityName')), '2023-01-31').clientId]"
    },
    "AZURE_STORAGE_ACCOUNT_NAME": {
      "type": "string",
      "value": "[variables('storageAccountName')]"
    },
    "AZURE_APPLICATION_INSIGHTS_NAME": {
      "type": "string",
      "value": "[variables('applicationInsightsName')]"
    },
    "AZURE_LOG_ANALYTICS_WORKSPACE_NAME": {
      "type": "string",
      "value": "[variables('logAnalyticsName')]"
    },
    "AZURE_FUNCTION_APP_NAME": {
      "type": "string",
      "value": "[variables('functionAppName')]"
    },
    "AZURE_FUNCTION_APP_URL": {
      "type": "string",
      "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/sites', variables('functionAppName')), '2023-12-01').defaultHostName)]"
    },
    "AZURE_FUNCTION_APP_HOSTNAME": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Web/sites', variables('functionAppName')), '2023-12-01').defaultHostName]"
    },
    "AZURE_KEY_VAULT_NAME": {
      "type": "string",
      "value": "[variables('keyVaultName')]"
    },
    "AZURE_KEY_VAULT_URL": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName')), '2023-07-01').vaultUri]"
    },
    "AZURE_STATIC_WEB_APP_NAME": {
      "type": "string",
      "value": "[variables('staticWebAppName')]"
    },
    "AZURE_STATIC_WEB_APP_URL": {
      "type": "string",
      "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/staticSites', variables('staticWebAppName')), '2022-09-01').defaultHostname)]"
    },
    "AZURE_STATIC_WEB_APP_HOSTNAME": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Web/staticSites', variables('staticWebAppName')), '2022-09-01').defaultHostname]"
    }
  }
}