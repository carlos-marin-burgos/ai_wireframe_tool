var x=Object.defineProperty,b=Object.defineProperties;var g=Object.getOwnPropertyDescriptors;var p=Object.getOwnPropertySymbols;var w=Object.prototype.hasOwnProperty,y=Object.prototype.propertyIsEnumerable;var f=(n,t,e)=>t in n?x(n,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):n[t]=e,h=(n,t)=>{for(var e in t||(t={}))w.call(t,e)&&f(n,e,t[e]);if(p)for(var e of p(t))y.call(t,e)&&f(n,e,t[e]);return n},u=(n,t)=>b(n,g(t));var m=(n,t,e)=>new Promise((i,a)=>{var o=r=>{try{c(e.next(r))}catch(l){a(l)}},s=r=>{try{c(e.throw(r))}catch(l){a(l)}},c=r=>r.done?i(r.value):Promise.resolve(r.value).then(o,s);c((e=e.apply(n,t)).next())});class v{exportAsHTML(i){return m(this,arguments,function*(t,e={}){try{if(!t||t.trim()==="")throw new Error("No wireframe content to export");const a=e.filename||`wireframe-${Date.now()}.html`,o=this.createStandaloneHTML(t,e),s=new Blob([o],{type:"text/html"}),c=URL.createObjectURL(s),r=document.createElement("a");return r.href=c,r.download=a,r.style.display="none",document.body.appendChild(r),r.click(),document.body.removeChild(r),setTimeout(()=>URL.revokeObjectURL(c),1e3),{success:!0,filename:a,size:s.size}}catch(a){return console.error("Export error:",a),{success:!1,filename:"",error:a instanceof Error?a.message:"Export failed"}}})}exportAsJSON(a){return m(this,arguments,function*(t,e={},i={}){try{const o=i.filename||`wireframe-data-${Date.now()}.json`,s={version:"1.0",exportedAt:new Date().toISOString(),type:"wireframe",content:{html:t,metadata:u(h({},e),{exportOptions:i})}},c=JSON.stringify(s,null,2),r=new Blob([c],{type:"application/json"}),l=URL.createObjectURL(r),d=document.createElement("a");return d.href=l,d.download=o,d.style.display="none",document.body.appendChild(d),d.click(),document.body.removeChild(d),setTimeout(()=>URL.revokeObjectURL(l),1e3),{success:!0,filename:o,size:r.size}}catch(o){return console.error("JSON export error:",o),{success:!1,filename:"",error:o instanceof Error?o.message:"JSON export failed"}}})}createStandaloneHTML(t,e){var s;const i=((s=e.filename)==null?void 0:s.replace(".html",""))||"Exported Wireframe",a=e.includeStyles!==!1,o=e.includeInteractivity!==!1;return`<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>${i}</title>
    <meta name="generator" content="Designetica Wireframe Tool">
    <meta name="exported-at" content="${new Date().toISOString()}">
    ${a?this.getEmbeddedStyles():""}
    ${o?this.getInteractivityScripts():""}
</head>
<body>
    <div class="wireframe-export-container">
        <div class="export-header">
            <h1>ðŸŽ¨ ${i}</h1>
            <p>Generated by Designetica Wireframe Tool</p>
            <p class="export-date">Exported on ${new Date().toLocaleDateString()}</p>
        </div>
        <div class="wireframe-content">
            ${t}
        </div>
        <div class="export-footer">
            <p>Created with <a href="https://designetica.app" target="_blank">Designetica</a></p>
        </div>
    </div>
</body>
</html>`}getEmbeddedStyles(){return`
    <style>
        /* Reset and base styles */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            line-height: 1.6;
            color: #333;
            background: #f5f5f5;
        }

        .wireframe-export-container {
            max-width: 1400px;
            margin: 0 auto;
            background: white;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
            min-height: 100vh;
        }

        .export-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 30px;
            text-align: center;
            border-bottom: 3px solid #5a67d8;
        }

        .export-header h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
            font-weight: 700;
        }

        .export-header p {
            font-size: 1.1rem;
            opacity: 0.9;
        }

        .export-date {
            font-size: 0.9rem !important;
            margin-top: 10px !important;
            opacity: 0.7 !important;
        }

        .wireframe-content {
            padding: 40px;
            min-height: 600px;
        }

        .export-footer {
            background: #f8f9fa;
            padding: 20px;
            text-align: center;
            border-top: 1px solid #e9ecef;
            color: #6c757d;
        }

        .export-footer a {
            color: #5a67d8;
            text-decoration: none;
            font-weight: 600;
        }

        .export-footer a:hover {
            text-decoration: underline;
        }

        /* Preserve existing wireframe styles */
        .card, .button, .btn {
            transition: all 0.2s ease;
            border: 2px dashed rgba(156, 163, 175, 0.4);
        }

        .card:hover {
            border-color: rgba(75, 85, 99, 0.8);
        }

        .button:hover, .btn:hover {
            border-color: rgba(75, 85, 99, 0.8);
        }

        /* Microsoft Learn specific styles */
        .microsoftlearn-card {
            border: 1px solid #e1e1e1;
            border-radius: 8px;
            padding: 20px;
            margin: 10px 0;
            background: white;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .breadcrumb {
            background: #f8f9fa;
            padding: 10px 20px;
            border-radius: 4px;
            margin-bottom: 20px;
        }

        /* Responsive design */
        @media (max-width: 768px) {
            .wireframe-content {
                padding: 20px;
            }
            
            .export-header h1 {
                font-size: 2rem;
            }
        }

        /* Print styles */
        @media print {
            .export-header {
                background: #333 !important;
                color: white !important;
            }
            
            .wireframe-export-container {
                box-shadow: none;
            }
        }
    </style>`}getInteractivityScripts(){return`
    <script>
        // Basic interactivity for exported wireframe
        document.addEventListener('DOMContentLoaded', function() {
            console.log('Exported wireframe loaded');
            
            // Add click handlers for buttons and links
            const clickableElements = document.querySelectorAll('button, .button, .btn, .card[data-clickable], [role="button"]');
            
            clickableElements.forEach(element => {
                element.addEventListener('click', function(e) {
                    e.preventDefault();
                    
                    // Visual feedback
                    this.style.transform = 'scale(0.95)';
                    setTimeout(() => {
                        this.style.transform = '';
                    }, 150);
                    
                    // Simple notification
                    const text = this.textContent || this.getAttribute('aria-label') || 'Element';
                    console.log('Clicked:', text.trim());
                    
                    // You could add more sophisticated interaction here
                    if (window.confirm('This is a wireframe export. Would you like to know more about this element?')) {
                        alert('Element: ' + text.trim() + '\\n\\nThis wireframe was created with Designetica.');
                    }
                });
            });
            
            // Add hover effects
            const hoverElements = document.querySelectorAll('.card, .button, .btn');
            hoverElements.forEach(element => {
                element.style.cursor = 'pointer';
            });
        });
    <\/script>`}generateFilename(t="wireframe",e="html"){const i=new Date,a=i.toISOString().split("T")[0],o=i.toTimeString().split(" ")[0].replace(/:/g,"-");return`${t}-${a}-${o}.${e}`}validateExportOptions(t){const e=[];return["html","figma-file","figma-components"].includes(t.format)||e.push("Invalid export format"),t.filename&&!/^[a-zA-Z0-9\-_. ]+$/.test(t.filename)&&e.push("Invalid filename characters"),t.quality&&!["high","medium","low"].includes(t.quality)&&e.push("Invalid quality setting"),{valid:e.length===0,errors:e}}}const E=new v;export{E as default,E as wireframeExportService};
